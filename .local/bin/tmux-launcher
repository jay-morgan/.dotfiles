#!/usr/bin/env zsh

# Path to tmux-sessionizer
tmux_sessionizer="$HOME/.dotfiles/.local/bin/tmux-sessionizer"

# Check if inside a tmux session
if [ -n "$TMUX" ]; then
    sessions=$(tmux list-sessions -F "#S" 2>/dev/null)
    session_count=$(echo "$sessions" | wc -l | tr -d '[:space:]')
    
    # If there's only one session, remain in the current session
    if [[ $session_count -eq 1 ]]; then
        echo "One session detected. Remaining in the current session."
        exit 0
    else
        echo "Multiple sessions detected. Selecting a session..."
        session_to_switch=$(echo "$sessions" | fzf)
        if [[ -n $session_to_switch ]]; then
            tmux switch-client -t "$session_to_switch"
        else
            echo "No session selected. Remaining in the current session."
            exit 0
        fi
    fi
    exit 0
fi

# For cases outside of tmux
sessions=$(tmux list-sessions -F "#S" 2>/dev/null || echo "")
if [[ -z "$sessions" ]]; then
    session_count=0
else
    session_count=$(echo "$sessions" | wc -l | tr -d '[:space:]')
fi

# Decision based on session count
if [[ $session_count -eq 0 ]]; then
    echo "No sessions available. Running tmux-sessionizer..."
    $tmux_sessionizer || echo "Exited without selecting a session." && exit 0
elif [[ $session_count -eq 1 ]]; then
    echo "One session detected. Attaching to tmux..."
    tmux attach
else
    echo "Multiple sessions detected. Selecting a session..."
    session_to_attach=$(echo "$sessions" | fzf)
    if [[ -n $session_to_attach ]]; then
        tmux attach -t "$session_to_attach"
    else
        echo "No session selected. Exiting..."
        exit 0
    fi
fi

