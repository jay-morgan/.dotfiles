#!/usr/bin/env zsh

# Path to tmux-sessionizer
tmux_sessionizer="$HOME/personal/.dotfiles/.local/bin/tmux-sessionizer"

# Function to decide which session to attach to
attach_to_session() {
    sessions=$(tmux list-sessions -F "#S" 2>/dev/null || echo "")
    if [[ -z "$sessions" ]]; then
        session_count=0
    else
        session_count=$(echo "$sessions" | wc -l | tr -d '[:space:]')
    fi

    echo "Session count: $session_count" >> /tmp/tmux-launcher.log

    if [[ $session_count -eq 1 ]]; then
        echo "One session detected. Attaching to tmux..." >> /tmp/tmux-launcher.log
        tmux attach
    else
        echo "Multiple sessions detected. Selecting a session..." >> /tmp/tmux-launcher.log
        session_to_attach=$(echo "$sessions" | /home/jaypopdev/.fzf/bin/fzf)
        if [[ -n $session_to_attach ]]; then
            tmux attach -t "$session_to_attach"
        else
            echo "No session selected. Exiting..." >> /tmp/tmux-launcher.log
            exit
        fi
    fi
}

# Check if inside a tmux session
if [ -n "$TMUX" ]; then
    echo "Inside tmux session" >> /tmp/tmux-launcher.log
    attach_to_session
    exit 0
fi

# For cases outside of tmux
sessions=$(tmux list-sessions -F "#S" 2>/dev/null || echo "")
if [[ -z "$sessions" ]]; then
    session_count=0
else
    session_count=$(echo "$sessions" | wc -l | tr -d '[:space:]')
fi

# Decision based on session count
if [[ $session_count -eq 0 ]]; then
    echo "No sessions available. Restoring tmux session using tmux-resurrect..." >> /tmp/tmux-launcher.log
    tmux new-session -d
    tmux send-keys "C-a" "C-r"
    sleep 2 # Give tmux-resurrect some time to restore the session
    attach_to_session
    clear
else
    attach_to_session
    clear
fi
